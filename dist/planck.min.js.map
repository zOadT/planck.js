{"version":3,"sources":["webpack://planck/webpack/bootstrap","webpack://planck/./lib/common/Vec2.js","webpack://planck/./lib/common/Math.js","webpack://planck/./lib/util/common.js","webpack://planck/./lib/common/Rot.js","webpack://planck/./lib/Settings.js","webpack://planck/./lib/common/Transform.js","webpack://planck/./lib/util/create.js","webpack://planck/./lib/util/options.js","webpack://planck/./lib/common/Sweep.js","webpack://planck/./lib/common/Mat22.js","webpack://planck/./lib/common/Vec3.js","webpack://planck/./lib/Joint.js","webpack://planck/./lib/common/Velocity.js","webpack://planck/./lib/common/Position.js","webpack://planck/./lib/common/Mat33.js","webpack://planck/./lib/Shape.js","webpack://planck/./lib/collision/AABB.js","webpack://planck/./lib/Contact.js","webpack://planck/./lib/Manifold.js","webpack://planck/./lib/Body.js","webpack://planck/./lib/shape/PolygonShape.js","webpack://planck/./lib/collision/Distance.js","webpack://planck/./lib/shape/CircleShape.js","webpack://planck/./lib/shape/EdgeShape.js","webpack://planck/./lib/common/stats.js","webpack://planck/./lib/shape/ChainShape.js","webpack://planck/./lib/World.js","webpack://planck/./lib/collision/DynamicTree.js","webpack://planck/./lib/Fixture.js","webpack://planck/./lib/collision/TimeOfImpact.js","webpack://planck/./lib/joint/RevoluteJoint.js","webpack://planck/./lib/joint/PrismaticJoint.js","webpack://planck/./lib/index.js","webpack://planck/./lib/serializer/index.js","webpack://planck/./lib/collision/BroadPhase.js","webpack://planck/./lib/util/Pool.js","webpack://planck/./lib/Solver.js","webpack://planck/./lib/util/Timer.js","webpack://planck/./lib/shape/BoxShape.js","webpack://planck/./lib/shape/CollideCircle.js","webpack://planck/./lib/shape/CollideEdgeCircle.js","webpack://planck/./lib/shape/CollidePolygon.js","webpack://planck/./lib/shape/CollideCirclePolygone.js","webpack://planck/./lib/shape/CollideEdgePolygon.js","webpack://planck/./lib/joint/DistanceJoint.js","webpack://planck/./lib/joint/FrictionJoint.js","webpack://planck/./lib/joint/GearJoint.js","webpack://planck/./lib/joint/MotorJoint.js","webpack://planck/./lib/joint/MouseJoint.js","webpack://planck/./lib/joint/PulleyJoint.js","webpack://planck/./lib/joint/RopeJoint.js","webpack://planck/./lib/joint/WeldJoint.js","webpack://planck/./lib/joint/WheelJoint.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_ASSERT","Vec2","common","Math","x","y","this","assert","_serialize","_deserialize","data","obj","zero","neo","clone","v","toString","JSON","stringify","isValid","isFinite","Error","setZero","set","wSet","a","b","w","setCombine","setMul","add","wAdd","addCombine","addMul","wSub","subCombine","subMul","sub","mul","length","lengthOf","lengthSquared","normalize","EPSILON","invLength","sqrt","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","max","lower","min","clamp","lengthSqr","invSqrt","scaleFn","translateFn","native","math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","random","debug","statement","err","log","Rot","angle","setAngle","setIdentity","rot","identity","sin","cos","getAngle","atan2","getXAxis","getYAxis","qr","mulRot","mulVec2","mulSub","mulT","mulTRot","mulTVec2","Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","Transform","position","rotation","q","xf","Array","isArray","arr","mulAll","mulFn","mulXf","px","py","mulTXf","proto","props","noop","propertyIsEnumerable","to","from","getOwnPropertySymbols","symbols","symbol","Sweep","localCenter","alpha0","c0","a0","setTransform","setLocalCenter","getTransform","beta","advance","alpha","forward","that","Mat22","ex","ey","getInverse","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","Vec3","z","Joint","JointEdge","other","joint","prev","next","def","bodyA","bodyB","m_type","m_bodyA","m_bodyB","m_index","m_collideConnected","collideConnected","m_prev","m_next","m_edgeA","m_edgeB","m_islandFlag","m_userData","userData","TYPES","context","restore","clazz","type","isActive","getType","getBodyA","getBodyB","getNext","getUserData","setUserData","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","shiftOrigin","newOrigin","initVelocityConstraints","step","solveVelocityConstraints","solvePositionConstraints","Position","Mat33","ez","solve33","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","Shape","m_radius","_reset","shape","getRadius","_clone","getChildCount","testPoint","rayCast","output","input","transform","childIndex","computeAABB","aabb","computeMass","massData","density","computeDistanceProxy","proxy","AABB","lowerBound","upperBound","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","Infinity","tmax","p1","p2","absD","normal","f","inv_d","t1","t2","temp","maxFraction","fraction","Manifold","Distance","ContactEdge","contact","Contact","fA","indexA","fB","indexB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","m_toiFlag","m_friction","mixFriction","m_restitution","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","rA","rB","normalImpulse","tangentImpulse","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","initConstraint","fixtureA","fixtureB","shapeA","getShape","shapeB","getBody","manifold","getManifold","pointCount","m_invMass","m_invI","m_sweep","localNormal","localPoint","j","cp","points","vcp","warmStarting","dtRatio","getWorldManifold","worldManifold","setEnabled","flag","isEnabled","isTouching","getFixtureA","getFixtureB","getChildIndexA","getChildIndexB","flagForFiltering","setFriction","friction","getFriction","resetFriction","setRestitution","restitution","getRestitution","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","xfA","xfB","update","listener","touching","wasTouching","sensorA","isSensor","sensorB","sensor","oldManifold","nmp","omp","id","setAwake","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","c_velocity","c_position","positionB","localCenterA","localCenterB","mA","iA","mB","iB","cA","aA","cB","aB","minSeparation","point","separation","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","C","rnA","rnB","K","impulse","P","initVelocityConstraint","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","m_body","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","addType","type1","type2","callback","typeA","typeB","m_contactList","destroy","destroyFcn","ManifoldPoint","ContactID","cf","ContactFeature","WorldManifold","separations","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","configurable","wm","dist","nullState","Body","options","Velocity","Fixture","staticBody","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","allowSleep","awake","active","world","m_world","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_mass","m_I","m_xf","m_force","m_torque","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_jointList","m_fixtureList","m_destroyed","MassData","mass","center","I","fixtures","push","body","forEach","fixture","_addFixture","isWorldLocked","isLocked","getWorld","getFixtureList","getJointList","getContactList","isStatic","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","resetMassData","synchronizeFixtures","ce","ce0","destroyContact","broadPhase","m_broadPhase","proxyCount","m_proxyCount","touchProxy","m_proxies","proxyId","isBullet","setBullet","isSleepingAllowed","setSleepingAllowed","isAwake","setActive","createProxies","destroyProxies","isFixedRotation","setFixedRotation","synchronize","synchronizeTransform","getPosition","setPosition","getWorldCenter","getLocalCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","scale","getMass","getInertia","getMassData","m_density","oldCenter","setMassData","applyForce","force","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","applyAngularImpulse","shouldCollide","jn","m_newFixture","createFixture","fixdef","destroyFixture","found","node","edge","publish","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","PolygonShape","vertices","_super","TYPE","m_centroid","m_vertices","m_normals","m_count","_set","getVertex","index","_setAsBox","ps","tempCount","unique","i0","x0","hull","ih","ie","i1","i2","vs","count","area","pRef","p3","e1","e2","triangleArea","ComputeCentroid","hx","hy","pLocal","numerator","denominator","minX","minY","maxX","maxY","D","ex1","ey1","ex2","ey2","validate","e","Input","DistanceInput","Output","DistanceOutput","Proxy","DistanceProxy","Cache","SimplexCache","stats","proxyA","proxyB","transformA","transformB","useRadii","iterations","metric","cache","gjkCalls","simplex","Simplex","readCache","m_v","k_maxIters","saveA","saveB","saveCount","iter","getClosestPoint","getSearchDirection","vertex","getSupport","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","SimplexVertex","m_v1","m_v2","m_v3","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","CircleShape","m_p","radius","rr","sigma","EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","newline","string","ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","isLoop","prevVertex","nextVertex","hasPrevVertex","hasNextVertex","map","_setPrevVertex","_setNextVertex","createChain","getChildEdge","World","BroadPhase","Solver","WorldDef","gravity","continuousPhysics","subStepping","velocityIterations","positionIterations","m_solver","m_contactCount","m_bodyList","m_bodyCount","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","m_clearForces","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","m_stepCount","addPair","createContact","bodies","joints","getBodyList","reverse","_addBody","createJoint","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","queryAABB","queryCallback","query","point1","point2","reportFixtureCallback","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","createBody","createDynamicBody","createKinematicBody","destroyBody","je","je0","destroyJoint","f0","s_step","TimeStep","timeStep","findNewContacts","reset","updateContacts","solveWorld","solveWorldTOI","updatePairs","next_c","activeA","activeB","proxyIdA","proxyIdB","_listeners","on","off","listeners","indexOf","splice","arg1","arg2","arg3","postSolve","Pool","TreeNode","parent","child1","child2","height","DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","isLeaf","getFatAABB","allocateNode","allocate","freeNode","release","createProxy","insertLeaf","destroyProxy","removeLeaf","moveProxy","leaf","leafAABB","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","F","G","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","computeHeight","height1","height2","validateStructure","validateMetrics","getMaxBalance","maxBalance","rebuildBottomUp","nodes","minCost","iMin","jMin","aabbi","aabbj","stack","stackPool","pop","rayCastCallback","abs_v","segmentAABB","subInput","inputPool","h","Iterator","iterator","close","parents","states","root","FixtureDef","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","setSensor","getDensity","setDensity","getAABB","xf1","xf2","aabb1","aabb2","displacement","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","getFilterCategoryBits","getFilterMaskBits","timer","Timer","now","toiCalls","state","TOIOutput","e_unknown","tMax","sweepA","sweepB","totalRadius","target","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","time","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","RevoluteJoint","inactiveLimit","DEFAULTS","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","anchor","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_referenceAngle","referenceAngle","m_impulse","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_motorMass","m_limitState","getLocalAnchorA","getLocalAnchorB","getReferenceAngle","getJointAngle","bA","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","qA","qB","jointAngle","Cdot","oldImpulse","maxImpulse","dt","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","PrismaticJoint","lowerTranslation","upperTranslation","maxMotorForce","axis","m_localXAxisA","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","bB","setMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","perp","C1","linearError","C2","translation","impulse1","internal","Serializer","Circle","Edge","Polygon","Chain","Box","CollidePolygons","DistanceJoint","FrictionJoint","GearJoint","MotorJoint","MouseJoint","PulleyJoint","RopeJoint","WeldJoint","WheelJoint","TimeOfImpact","SID","CLASSES","toJson","flat","queue","store","cls","__sid","ref","shift","str","join","fromJson","parse","dump","ctx","refIndex","refType","m_tree","m_moveBuffer","aabbA","aabbB","bufferMove","unbufferMove","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","opts","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","size","item","TOIInput","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","clear","addBody","addContact","addJoint","seed","solveIsland","ratio","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","printBodies","tag","s_subStep","ContactImpulse","normalImpulses","tangentImpulses","minContact","minAlpha","collideA","collideB","backup1","backup2","backup","solveIslandTOI","subStep","Date","BoxShape","CollideCircles","circleA","circleB","distSqr","CollideEdgeCircle","edgeA","Q","u","A1","B1","B2","A2","den","chain","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","polyA","polyB","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","polygonA","cLocal","normalIndex","vertexCount","normals","vertIndex1","vertIndex2","u1","u2","faceCenter","CollidePolygonCircle","CollideEdgePolygon","e_edgeA","e_edgeB","EPAxis","edgeAxis","polygonAxis","polygonBA","rf","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","frequencyHz","dampingRatio","anchorA","anchorB","m_length","m_frequencyHz","m_dampingRatio","m_gamma","m_bias","m_u","gamma","bias","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","crAu","crBu","invMass","omega","k","vpA","vpB","maxForce","maxTorque","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","correctionFactor","m_linearOffset","linearOffset","angleA","angleB","m_angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","angularOffset","getAngularOffset","inv_h","m_targetA","m_beta","m_C","setTarget","getTarget","velocity","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","invM","impulse2","m_localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","getMaxMotorTorque","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy"],"mappings":"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","file":"planck.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function(data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function() {\n  return Vec2.clone(this);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\n/**\n * @deprecated Use setCombine or setMul\n */\nVec2.prototype.wSet = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n}\n\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.setCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\nVec2.prototype.setMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\n/**\n * @deprecated Use addCombine or addMul\n */\nVec2.prototype.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n}\n\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.addCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.addMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\n/**\n * @deprecated Use subCombine or subMul\n */\nVec2.prototype.wSub = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }}\n\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.subCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\nVec2.prototype.subMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\n/**\n * Returns `a + (v x w)`\n */\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\n/**\n * @deprecated Use combine\n */\nVec2.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n}\n\nVec2.combine = function(a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\nVec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n\n/**\n * @experimental\n */\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n}\n\n/**\n * @experimental\n */\nVec2.translateFn = function(x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar native = Math;\nvar math = module.exports = create(native);\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Math = require('./Math');\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function() {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulRot = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m);\n  // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n}\n\nRot.mulVec2 = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulTRot = function(rot, m) {\n  _ASSERT && Rot.assert(m);\n  // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n}\n\nRot.mulTVec2 = function(rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nvar Settings = exports;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @deprecated Use mulFn instead.\n */\nTransform.mulAll = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n  return arr;\n}\n\n/**\n * @experimental\n */\nTransform.mulFn = function(a) {\n  _ASSERT && Transform.assert(a);\n  return function(b) {\n    return Transform.mul(a, b);\n  };\n}\n\nTransform.mulVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n  var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n  return Vec2.neo(x, y);\n}\n\nTransform.mulXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}\n\nTransform.mulTVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b)\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = (a.q.c * px + a.q.s * py);\n  var y = (-a.q.s * px + a.q.c * py);\n  return Vec2.neo(x, y);\n}\n\nTransform.mulTXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n}\n","if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function(to, from) {\n  if (to === null || typeof to === 'undefined') {\n    to = {};\n  }\n\n  for ( var key in from) {\n    if (from.hasOwnProperty(key) && typeof to[key] === 'undefined') {\n      to[key] = from[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(from);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (from.propertyIsEnumerable(symbol) && typeof to[key] === 'undefined') {\n        to[symbol] = from[symbol];\n      }\n    }\n  }\n  return to;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n    var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n    var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n    var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n    var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n    return new Mat22(a, b, c, d);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulVec2 = function(mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n}\n\nMat22.mulMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(v);\n  // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n  var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n  var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n  var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n  return new Mat22(a, b, c, d);\n  _ASSERT && common.assert(false);\n}\n\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulTVec2 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n}\n\nMat22.mulTMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex, mx2.ex), Vec2.add(mx1.ey, mx2.ey));\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function(data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function(x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function(v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w ||\n    typeof v === 'object' && v !== null &&\n    typeof w === 'object' && w !== null &&\n    v.x === w.x && v.y === w.y && v.z === w.z;\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\nVec3.cross = function(v, w) {\n  return new Vec3(\n    v.y * w.z - v.z * w.y,\n    v.z * w.x - v.x * w.z,\n    v.x * w.y - v.y * w.x\n  );\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\nJoint.TYPES = {};\n\nJoint._deserialize = function(data, context, restore) {\n  var clazz = Joint.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.mulVec3 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n}\n\nMat33.mulVec2 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(\n    Vec3.add(a.ex, b.ex),\n    Vec3.add(a.ey, b.ey),\n    Vec3.add(a.ez, b.ez)\n  );\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function() {\n};\n\nShape.prototype._serialize = function() {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function(data, context, restore) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  } else if (typeof lower === 'object') {\n    this.upperBound.set(lower);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\nAABB.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n  return this;\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Mat22 = require('./common/Mat22');\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\nvar Manifold = require('./Manifold');\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n      var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.combine(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mulVec2(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Math = require('./common/Math');\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n};\n\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mulVec2(xfA, this.localPoint);\n    var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    var cA = pointA.clone().addMul(radiusA, normal);\n    var cB = pointB.clone().addMul(-radiusB, normal);\n    points[0] = Vec2.mid(cA, cB);\n    separations[0] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mulVec2(xfA.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mulVec2(xfB.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n      var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  data.fixtures.forEach(function(data) {\n    var fixture = restore(Fixture, data, body);\n    body._addFixture(fixture);\n  });\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data) {\n  var shape = new PolygonShape(data.vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = [];// [Settings.maxPolygonVertices];\n  var tempCount = 0;\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < tempCount; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps[tempCount++] = v;\n    }\n  }\n\n  n = tempCount;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x == x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = [];// [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie == ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c == 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie == i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  this.m_vertices[0] = Vec2.neo(-hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, -hy);\n  this.m_vertices[2] = Vec2.neo(hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, hy);\n\n  this.m_normals[0] = Vec2.neo(0.0, -1.0);\n  this.m_normals[1] = Vec2.neo(1.0, 0.0);\n  this.m_normals[2] = Vec2.neo(0.0, 1.0);\n  this.m_normals[3] = Vec2.neo(-1.0, 0.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\n\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.addMul(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    p: this.m_p,\n    radius: this.m_radius,\n  };\n};\n\nCircleShape._deserialize = function(data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\n/**\n * @deprecated\n */\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3,\n  };\n};\n\nEdgeShape._deserialize = function(data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\n/**\n * @deprecated\n */\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function(newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n  return string;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n * \n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    prevVertex: this.m_prevVertex,\n    nextVertex: this.m_nextVertex,\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex,\n  };\n};\n\nChainShape._deserialize = function(data) {\n  var shape = new ChainShape(data.vertices.map(Vec2._deserialize), data.isLoop);\n  return shape;\n};\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n * \n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices.length = 0;\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n  this.m_vertices[vertices.length] = vertices[0].clone();\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n * \n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = vertices[i].clone();\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\n/**\n * @deprecated\n */\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\nvar common = require('./util/common');\nvar Vec2 = require('./common/Vec2');\nvar BroadPhase = require('./collision/BroadPhase');\nvar Solver = require('./Solver');\nvar Body = require('./Body');\nvar Joint = require('./Joint');\nvar Contact = require('./Contact');\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = false]\n * @prop {boolean} [continuousPhysics = false]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WordDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  this.m_stepCount = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function() {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  for (var j = this.getJointList(); j; j = j.getNext()) {\n    if (typeof j._serialize === 'function') {\n      joints.push(j);\n    }\n  }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    joints: joints,\n  };\n};\n\nWorld._deserialize = function(data, context, restore) {\n  if (!data) {\n    return new World();\n  }\n\n  var world = new World(data.gravity);\n\n  data.bodies && data.bodies.reverse().forEach(function(data) {\n    world._addBody(restore(Body, data, world));\n  });\n\n  data.joints && data.joints.reverse().forEach(function(data) {\n    world.createJoint(restore(Joint, data, world));\n  });\n\n  return world;\n};\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} body\n */\nWorld.prototype._addBody = function(body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n\n  this.publish('remove-body', b);\n\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // TODO: move this to testbed\n  this.m_stepCount++;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Pool = require('../util/Pool');\nvar Vec2 = require('../common/Vec2');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = this.computeHeight(node.child1.id);\n  var height2 = this.computeHeight(node.child2.id);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = child1.height;\n  var height2 = child2.height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  this.validateStructure(this.m_root);\n  this.validateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\nvar Shape = require('./Shape');\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Re-setup fixture.\n * @private\n */\nFixture.prototype._reset = function() {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function() {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n\n    shape: this.m_shape,\n  };\n};\n\nFixture._deserialize = function(data, body, restore) {\n  var shape = restore(Shape, data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} fixtureA\n * @param {Fixture} fixtureB\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex == this.m_filterGroupIndex && that.m_filterGroupIndex != 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collide = (that.m_filterMaskBits & this.m_filterCategoryBits) != 0\n      && (that.m_filterCategoryBits & this.m_filterMaskBits) != 0;\n  return collide;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    // if (false) {\n    //   // Dump the curve seen by the root finder\n    //   var N = 100;\n    //   var dx = 1.0 / N;\n    //   var xs = []; // [ N + 1 ];\n    //   var fs = []; // [ N + 1 ];\n    //   var x = 0.0;\n    //   for (var i = 0; i <= N; ++i) {\n    //     sweepA.getTransform(xfA, x);\n    //     sweepB.getTransform(xfB, x);\n    //     var f = fcn.evaluate(xfA, xfB) - target;\n    //     printf(\"%g %g\\n\", x, f);\n    //     xs[i] = x;\n    //     fs[i] = f;\n    //     x += dx;\n    //   }\n    // }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.indexA;// integer\n  this.indexB;// integer\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n * \n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n * \n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA =  anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB =  anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_localXAxisA = axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0);\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n  var d = Vec2.sub(p2, p1); // Vec2\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis))\n      + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","exports.internal = {};\n\nexports.Serializer = require('./serializer');\n\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Vec3 = require('./common/Vec3');\nexports.Mat22 = require('./common/Mat22');\nexports.Mat33 = require('./common/Mat33');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\n\nexports.AABB = require('./collision/AABB');\n\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\n\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\nrequire('./shape/CollideEdgeCircle');\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\nrequire('./shape/CollideCirclePolygone');\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\n\nexports.internal.Sweep = require('./common/Sweep');\nexports.internal.stats = require('./common/stats');\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = require('./Settings');\n","var World = require('../World');\nvar Body = require('../Body');\nvar Joint = require('../Joint');\nvar Shape = require('../Shape');\n\nvar SID = 0;\n\nvar CLASSES = {\n  'Body': Body,\n  'Joint': Joint,\n};\n\nexports.toJson = function(world, stringify) {\n  stringify = stringify || JSON.stringify;\n  var flat = [];\n  var queue = [world];\n  var map = {};\n\n  var store = function(value, cls) {\n    value.__sid = value.__sid || ++SID;\n    if (map[value.__sid]) {\n      return map[value.__sid];\n    }\n    queue.push(value);\n    var index = flat.length + queue.length;\n    var ref = {\n      'refIndex': index,\n      'refType': cls\n    };\n    return map[value.__sid] = ref;\n  };\n\n  while (queue.length) {\n    var obj = queue.shift();\n    var str = stringify(obj, function(key, value) {\n      if (typeof value === 'object' && value !== null) {\n        if (typeof value._serialize === 'function') {\n          if (value !== obj && value instanceof Body) {\n            value = store(value, 'Body');\n          } else if (value !== obj && value instanceof Joint) {\n            value = store(value, 'Joint');\n          } else {\n            value = value._serialize();\n          }\n        }\n      }\n      return value;\n    }, '  ');\n    flat.push(str);\n  }\n\n  var result = '[' + flat.join(',') + ']';\n  return result;\n};\n\nexports.fromJson = function(string, parse) {\n  parse = parse || JSON.parse;\n  var dump = parse(string);\n  var map = {};\n  function restore(cls, ref, ctx) {\n    if (!ref.refIndex) {\n      return cls && cls._deserialize && cls._deserialize(ref, ctx, restore);\n    }\n    var index = ref.refIndex;\n    cls = CLASSES[ref.refType] || cls;\n    if (map[index]) {\n      return map[index];\n    }\n    var data = dump[index];\n    return map[index] = cls._deserialize(data, ctx, restore);\n  }\n  var world = World._deserialize(dump[0], null, restore);\n  return world;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\nvar Contact = require('./Contact');\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function() {\n  return Date.now();\n}\n\nmodule.exports.diff = function(time) {\n  return Date.now() - time;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexports.CollideCircles = CollideCircles;","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar CircleShape = require('./CircleShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nDistanceJoint.TYPE = 'distance-joint';\nJoint.TYPES[DistanceJoint.TYPE] = DistanceJoint;\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} def.length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  }\n\n  // order of constructor arguments is changed in v0.2\n  if (bodyB && anchorA && ('m_type' in anchorA) && ('x' in bodyB) && ('y' in bodyB)) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero();\n  this.m_length = Math.isFinite(def.length) ? def.length :\n    Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\nDistanceJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    length: this.m_length,\n\n    impulse: this.m_impulse,\n    gamma: this.m_gamma,\n    bias: this.m_bias,\n  };\n};\n\nDistanceJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new DistanceJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nFrictionJoint.TYPE = 'friction-joint';\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  maxTorque : 0.0,\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = FrictionJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar RevoluteJoint = require('./RevoluteJoint');\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\n\nGearJoint._super = Joint;\nGearJoint.prototype = create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE\n      || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE\n      || joint2.m_type === PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMotorJoint.TYPE = 'motor-joint';\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MotorJoint.TYPE;\n\n  this.m_linearOffset = def.linearOffset ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n\n  var angleA = bodyA.getAngle();\n  var angleB = bodyB.getAngle();\n  this.m_angularOffset = angleB - angleA;\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nMouseJoint.TYPE = 'mouse-joint';\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength : 0.0,\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nWeldJoint.TYPE = 'weld-joint';\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0,\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\n\nWheelJoint.TYPE = 'wheel-joint';\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nvar DEFAULTS = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7,\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero();\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero();\n  this.m_localAxis = axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0);\n\n  this.m_localXAxisA = this.m_localAxis;\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = Vec2.sub(pB, pA); // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n"],"sourceRoot":""}